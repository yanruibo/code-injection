














































/* -*- mode: javascript; coding: utf-8; -*- */

//////////////////////////////////////////////////////////////////////////////
// PhoneGap 用の設定を記述するセクション
//////////////////////////////////////////////////////////////////////////////

// If you want to prevent dragging, uncomment this section
/*
  function preventBehavior(e) { 
  e.preventDefault(); 
  };
  document.addEventListener("touchmove", preventBehavior, false);
*/
	
/* If you are supporting your own protocol, the var invokeString will contain any arguments to the app launch.
   see http://iphonedevelopertips.com/cocoa/launching-your-own-application-via-a-custom-url-scheme.html
   for more details -jm */
/*
  function handleOpenURL(url) {
  // TODO: do something with the url passed in.
  }
*/

// Call onDeviceReady when Cordova is loaded.
//
// At this point, the document has loaded but cordova-1.6.1.js has not.
// When Cordova is loaded and talking with the native device,
// it will call the event `deviceready`.
//
function onLoad() {
    document.addEventListener("deviceready", onDeviceReady, false);
}

// Cordova is loaded and it is now safe to call Cordova methods
//
function onDeviceReady() {
    navigator.notification.alert("PhoneGap is working");
    // Register the event listener
    document.addEventListener("backbutton", onBackKeyDown, false);
}

// Handle the back button
//
function onBackKeyDown() {
    navigator.notification.alert("Backkey pushed");
}

//////////////////////////////////////////////////////////////////////////////
// アプリ
//////////////////////////////////////////////////////////////////////////////

console.log("アプリケーションの初期化を行います。");

// WebStorage が利用できない場合は警告しておく
if (typeof localStorage === 'undefined') {
    window.alert("本ブラウザでは Web Storage が使えません。"
                 + "この為、続きからの実行はできません。");
}

$(document).ready(function(){

    // バックボタンの処理を変更
    document.addEventListener("backbutton", onBackKeyDown, false);

    // Android 用の横幅調整
    var portraitWidth,landscapeWidth;
    $(window).bind("resize", function(){
        if(Math.abs(window.orientation) === 0){
	    if(/Android/.test(window.navigator.userAgent)){
	        if(!portraitWidth) {
                    portraitWidth=$(window).width();
                }
	    }
            else {
	        portraitWidth=$(window).width();
            }
	        $("html").css("zoom" , portraitWidth/320);
        }
        else{
	    if(/Android/.test(window.navigator.userAgent)){
	        if(!landscapeWidth)landscapeWidth=$(window).width();
	    }
            else {
	        landscapeWidth=$(window).width();
	    }
	    $("html").css("zoom" , landscapeWidth/320);
        }
    }).trigger("resize");
});

// アプリの名前空間
var Ninja = (function(){

    // クロージャ内の共通変数の定義セクション

    // 保存先には WebStorage を利用
    var storage_test_key = "test-key-201204261326";
    var storage_test_value = "test-value-201204261326";

    // 起動直後の書込みで不安定になるのかもしれないのでやめる。
    // storage.setItem(storage_test_key, storage_test_value);
    // if (storage.getItem(storage_test_key) != storage_test_value) {
    //    window.alert("本ブラウザでは Web Storage への書き込みが制限されています。"
    //                 + "この為、続きからの実行はできません。");
    // }

    // カレの情報
    var partners = [
        {name: "レオン",
         image: "leon1_futsu.png",
         desc: ["レオン",
                " ",
                "花の国ロザイラ国の第一王子。",
                "いつも優しい微笑みを絶やさず、少し不思議な雰囲気を持った青年。",
                "舞踏会で結婚相手を選ばなければいけない事に納得出来ず、憂鬱な日々を過ごしている。",
                " "],
         url: "P01/S02/E2.html",
         btn: "asset/intro/reon100x45.png",
        },

        {name: "スカイ",
         image: "sky1_futsu.png",
         desc: ["スカイ",
                " ",
                "工業が盛んなの国カッーロゾの王子様。",
                "毎日の鍛錬を欠かさず、頼れる兄貴肌だが父親と仲違い中。",
                "国のお祭りである剣技大会でも乗り気になれず城を抜け出しては森で鍛錬をする。",
                " "],
         url: "P01/S03/E2.html",
         btn: "asset/intro/sky100x45.png",
        },

        {name: "リック",
         image: "rick1_futsu.png",
         desc: ["リック",
                " ",
                "ファッションの国コンフェッツィの王子様。",
                "わがままな性格のせいか、素直になることが苦手な少年。服のデザインが好き。",
                "王位を次ぐためファッションコンテスト優勝を狙うがスランプ中。",
                " "],
         url: "P01/S04/E2.html",
         btn: "asset/intro/rikku100x45.png",
        },
    ];

    var sendMailAddress = function(mail_address) {
        // メールを送信する
        var mail_title = "ドキドキ恋愛メルマガ登録";
        var mail_body = "『王子様の願い』の追加シナリオやお得情報、関連ドキドキ恋愛ゲームの情報がGETできるよ!!\n\n次のメールアドレスを登録します。\n\n" + mail_address + "\n\nよろしければ「送信」をタップして下さいね♪\n\n攻略キャラたちからメールがくるかも？？お楽しみに！！";
        if (window.plugins && window.plugins.emailComposer) {
            window.plugins.emailComposer.showEmailComposer(
                mail_title,
                mail_body,
                // "mail@doesukareshi.com", // 古いアドレス(現在は使っていない)
                "prince@doesukareshi.com",
                //"esukare@mxz.jp", // デバッグ用
                "",
                "",
                false);
        }
        else if (window.plugins && window.plugins.webintent) {
  	    var extras = {};
            // extras[WebIntent.EXTRA_EMAIL] = 'esukare@mxz.jp';  // デバッグ用
            extras[WebIntent.EXTRA_EMAIL] = 'prince@doesukareshi.com';
	    extras[WebIntent.EXTRA_SUBJECT] = mail_title;
	    extras[WebIntent.EXTRA_TEXT] = mail_body;
	    window.plugins.webintent.startActivity({action: WebIntent.ACTION_SEND,
		                                    type: 'text/plain',
		                                    extras: extras},
                                                   function() {},
                                                   function() {alert('送信できませんでした。');});
        }
        else {
            console.log("DEBUG: EmailComposer または WebIntent がありません。");
        }
        console.log("Info: メールアドレスを登録しました。");
        params.mail_address = mail_address;
        saveParams();
    };

    // クッキーの読み書きテスト
    var testCookie = function() {
        if (window.navigator.cookieEnabled) {
            alert("Cookie OK");
            console.log("DEBUG:クッキーは利用できます。");
            console.log("DEBUG:document.cookie = " + document.cookie);

            // 有効期限の作成
            var nowtime = new Date().getTime();
            var clear_time = new Date(nowtime + (60 * 60 * 24 * 1000 * 365 * 10));
            var expires = clear_time.toGMTString();
            var cookie_string = "test=" + escape("test_data") + "; expires=" + expires;

            // クッキーの書込み
            console.log("DEBUG:cookie_string = " + cookie_string);
            document.cookie = cookie_string;
        }
        else {
            alert("Cookie NG");
	    console.log("DEBUG:クッキーは利用できません。");
        }
    };
    //testCookie();

    // パラメータにアクセスするキー
    var param_key = "com.accelainc.oujisamanonegai";

    // パラメータのバージョン(構造が変わったら更新)
    var param_ver = 1;

    // アップデートメッセージが必要かどうかを表すフラグ
    var need_update = false;

    // 以前の版のデータを移し替える
    var migrateIntegerParam = function(key, default_value) {
        var storage = window.localStorage;

        // 以前の値が無ければデフォルト値
        if (storage.getItem(key) == null) {
            return default_value;
        }

        // 以前のデータがあったのでアップデートメッセージが必要
        need_update = true;

        // 以前の値を返す(ストレージからは削除)
        var res = parseInt(storage.getItem(key));
        storage.removeItem(key);
        return res;
    };

    // 以前の版のデータを移し替える
    var migrateStringParam = function(key, default_value) {
        var storage = window.localStorage;

        // 以前の値が無ければデフォルト値
        if (storage.getItem(key) == null) {
            return default_value;
        }

        // 以前の値を返す(ストレージからは削除)
        var res = storage.getItem(key);
        storage.removeItem(key);
        return res;
    };

    // パラメータ
    var params = {};

    var saveParams = function() {

        // 有効期限の作成
        var nowtime = new Date().getTime();
        var clear_time = new Date(nowtime + (60 * 60 * 24 * 1000 * 365 * 10));
        var expires = clear_time.toGMTString();
        var cookie_string = param_key + "=" + escape(angular.toJson(params)) + "; path=/; expires=" + expires;
        
        // クッキーの書込み
        console.log("DEBUG:cookie_string = " + cookie_string);
        document.cookie = cookie_string;

        // Android で localStorage が動作が不安定なのでクッキーに保存する事とした

        // var storage = window.localStorage;

        // storage.setItem(param_key, angular.toJson(params));
        
        // // ダミーで大量のデータ(1MB程度)を書き込む
        // // キャッシュに入っているデータを無理やり書きだす
        // var dummy_string = "";
        // for (var i = 0; i < 10*1024; i++) {
        //     dummy_string += "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890";
        // }
        // storage.setItem(param_key + "_dummy", dummy_string);
    };

    // パラメータのロード
    var loadParams = function() {

        var data = null;
        if (document.cookie) {
	    var cookies = document.cookie.split("; ");
            console.log("DEBUG: cookies = " + cookies);
	    for (var i = 0; i < cookies.length; i++) {
		var str = cookies[i].split("=");
		if (str[0] == param_key) {
		    data = unescape(str[1]);
                    console.log("DEBUG: data = " + data);
		    break;
		}
	    }
        }

        // Android で localStorage が動作が不安定なのでクッキーから読込む事とした

        // var storage = window.localStorage;

        // // キーを使ってストレージから読み込む
        // var data = storage.getItem(param_key);
        // console.log("DEBUG: 読み込んだストレージ => " + storage);
        // console.log("DEBUG: 読み込んだデータ => " + data);
        // var retry_count = 0;
        // while (typeof data === 'undefined') {
        //     if (retry_count > 10000) {
        //         navigator.notification.alert("Timeout");
        //         console.log("DEBUG: タイムアウト");
        //         break;
        //     }
        //     data = storage.getItem(param_key);
        //     retry_count++;
        // }

        // 存在していなければ、デフォルト値を設定して返す
        if (data == null) {
            params.ver              = param_ver;
            params.current_point    = migrateIntegerParam("current_point", 0);
            params.current_location = migrateStringParam("current_location", null);
            params.saved_point      = migrateIntegerParam("saved_point", null);
            params.first_name       = migrateStringParam("first_name", "アリス");
            params.last_name        = migrateStringParam("last_name", "ファビアン");
            params.mail_address     = null;
            params.prev_scene       = null; // 一時的に戻るシーンを保持する変数
            params.bonus            = 0;    // 親密度の初期化時に設定するボーナス値
            params.partner_id       = -1;   // 選択したパートナID(未選択時は-1)
            params.name_changed     = false; // 名前登録が行われたかを示すフラグ(登録/変更された時は true)
            // 初期インストール時にはアップデートメッセージを出さない
            need_update = false;
            return;
        }

        // データが存在していれば json として解釈
        params = angular.fromJson(data);

        // 各バージョンからのマイグレードを記述
        if (params.ver != param_ver) {
            // 現在は初期化のみを行うコードを書いておく
            params = {}
            params.ver              = param_ver;
            params.current_point    = 0;
            params.current_location = null;
            params.saved_point      = null;
            params.first_name       = null;
            params.last_name        = null;
            params.mail_address     = null;
            params.prev_scene       = null; // 一時的に戻るシーンを保持する変数
            params.bonus            = 0;    // 親密度の初期化時に設定するボーナス値
            params.partner_id       = -1;   // 選択したパートナID(未選択時は0)
            params.name_changed     = false; // 名前登録が行われたかを示すフラグ(登録/変更された時は true)

            // バージョンアップなのでアップデートメッセージが必要
            need_update = true;
        }

        // 後から追加したボーナスが無かったらクリアしておく
        if (!("bonus" in params)) {
            params.bonus = 0;
        }
        // 後から追加した選択したパートナIDが無かったらクリアしておく
        if (!("partner_id" in params)) {
            params.partner_id = -1;
        }
        // 後から追加した名前変更済みフラグが無かったらクリアしておく
        if (!("name_changed" in params)) {
            params.name_changed = false;
        }
    };

    // この名前空間にある関数/クラスの定義セクション
    return {

        // 最初のページのコントローラ
        TopPageController: function() {
            console.log("TopPageController()を開始します。");
            var self = this;

            // パラメータを読む
            loadParams();

            // アップデートメッセージが必要ならばリリースノートのページへ
            if (need_update) {
                document.location = "update.html";
            }

            // 最初からボタンのコールバック
            self.onClickStart = function() {
                console.log("TopPageController:onClickStart()を開始します。");

                // 親密度をクリア
                params.current_point = params.bonus;

                // 間違ってスタートをタップした時に保存していた情報がク
                // リアされると言うクレームがあった為、以下のクリアを行
                // わないようにした。
                //
                // // 保存されていた情報をクリア
                // params.current_location = null;
                // params.saved_point = null;

                // パートナIDを未選択に設定
                params.partner_id = -1;

                // パラメータを保存
                saveParams();

                // 登録済みの名前を得る
                if (!params.name_changed) {
                    // 得られなければ、登録ページに移動
                    document.location = "register.html";
                }
                else {
                    // 得られれば、プロローグの最初に移動
                    document.location = "P01/S01/E2.html";
                }
                console.log("TopPageController:onClickStart()を終了します。");
            };

            // 続きからボタンのコールバック
            self.onClickContinue = function() {
                console.log("TopPageController:onClickContinue()を開始します。");

                // 最後に表示していたページを得る
                console.log("DEBUG: TopPageController:onClickContinue(): current_location =" + params.current_location);
                if (params.current_location != null) {
                    // 得られれば、そのページに移動
                    document.location = params.current_location;
                    // 合わせて親密度を保存した状態に戻す
                    if (params.saved_point != null) {
                        params.current_point = params.saved_point;
                        saveParams();
                    }
                }
                else {
                    // 登録済みの名前を得る
                    if (!params.name_changed) {
                        // 得られなければ、登録ページに移動
                        document.location = "register.html";
                    }
                    else {
                        // 得られれば、プロローグの最初に移動
                        document.location = "P01/S01/E2.html";
                    }
                }
                console.log("TopPageController:onClickContinue()を終了します。");
            };

            console.log("TopPageController()を終了します。");
        },

        // 登録(1)ページのコントローラ
        RegisterPageController: function() {
            console.log("RegisterPageController()を開始します。");
            var self = this;

            // パラメータを読む
            loadParams();
            this.params = params;

            // 名前の OK ボタン(登録)のコールバック
            self.onSubmitName = function() {
                console.log("RegisterPageController:onSubmitName()を開始します。");

                // ストレージのパラメータを初期化
                if (self.first_name) {
                    params.first_name = self.first_name; // 名前
                }
                if (self.last_name) {
                    params.last_name = self.last_name;   // 苗字
                }
                params.current_point = 0;            // 親密度
                params.name_changed = true;          // 名前の変更済み
                saveParams();

                // メールアドレスの登録へ
                if (params.mail_address == null) {
                    document.location = "register2.html";
                }
                else {
                    // プロローグを開始
                    document.location = "P01/S01/E2.html";
                }
        
                console.log("RegisterPageController:onSubmitName()を終了します。");
            };
    
            console.log("RegisterPageController()を終了します。");
        },

        // 登録(2)ページのコントローラ
        Register2PageController: function() {
            console.log("Register2PageController()を開始します。");
            var self = this;

            // パラメータを読む
            loadParams();
            this.params = params;

            // メールアドレスの OK ボタン(登録)のコールバック
            self.onSubmitEmailAddress = function(regist) {
                console.log("Register2PageController:onSubmitEmailAddress()を開始します。");
                if (regist) {
                    // メールアドレスを送信
                    sendMailAddress(self.mail_address);

                    // メールアドレス登録のボーナス値の制御

                    // 初期化時に設定するボーナス値を記憶
                    params.bonus = 10;

                    // 一旦ここでボーナス値をセット(キャラを選択した時点で
                    // bonus の値となるが、それまで表示に反映しないのでセット)
                    params.current_point += params.bonus;
                    saveParams();
                }
                else {
                    params.bonus = 0;
                }

                // プロローグを開始
                document.location = "P01/S01/E2.html";
        
                console.log("Register2PageController:onSubmitEmailAddress()を終了します。");
            };
    
            console.log("Register2PageController()を終了します。");
        },

        // 名前変更ページのコントローラ
        NameChangePageController: function($route, $location) {
            console.log("NameChangePageController()を開始します。");
            var self = this;

            // パラメータを読む
            loadParams();
            this.params = params;

            // パラメータから復帰する URL を得る
            params.prev_scene = $location.search.prev_scene;
            if (!params.prev_scene) {
                params.prev_scene = "index.html";
            }
            saveParams();

            // 名前の OK ボタン(登録)のコールバック
            self.onSubmitName = function() {
                console.log("NameChangePageController:onSubmitName()を開始します。");

                // ストレージのパラメータを初期化
                if (self.first_name) {
                    params.first_name = self.first_name; // 名前
                }
                if (self.last_name) {
                    params.last_name = self.last_name;   // 苗字
                }
                params.name_changed = true;          // 名前の変更済み
                saveParams();

                // 呼び出されたページに戻る
                if (params.mail_address == null) {
                    document.location = "namechange2.html";
                }
                else {
                    document.location = params.prev_scene;
                    params.prev_scene = null;
                    saveParams();
                }
        
                console.log("NameChangePageController:onSubmitName()を終了します。");
            };
    
            console.log("NameChangePageController()を終了します。");
        },

        // 名前変更(2)ページのコントローラ
        NameChange2PageController: function($route, $location) {
            console.log("NameChange2PageController()を開始します。");
            var self = this;

            // パラメータを読む
            loadParams();

            // メールアドレスの OK ボタン(登録)のコールバック
            self.onSubmitEmailAddress = function(regist) {
                console.log("NameChange2PageController:onSubmitEmailAddress()を開始します。");

                if (regist) {
                    // メールアドレスを送信
                    sendMailAddress(self.mail_address);

                    // メールアドレス登録のボーナス値の制御

                    // ボーナスを記憶
                    params.bonus = 10;

                    // 名前変更の場合は直ぐに親密度に反映させる
                    params.current_point += params.bonus;

                    // パラメータを記憶
                    saveParams();
                }

                // 呼び出されたページに戻る
                document.location = params.prev_scene;
                params.prev_scene = null;
                saveParams();

                console.log("NameChange2PageController:onSubmitEmailAddress()を終了します。");
            };
    
            console.log("NameChange2PageController()を終了します。");
        },

        // ダミーページのコントローラ
        DummyPageController: function() {
            console.log("DummyPageController()を開始します。");
            // 現在、このコントローラで実装する機能はありません。
            console.log("DummyController()を終了します。");
        },

        // カレの選択ページ・コントローラ
        PartnerSelectPageController: function() {
            console.log("PartnerSelectPageController()を開始します。");
            // 現在、このコントローラで実装する機能はありません。
            console.log("PartnerSelectController()を終了します。");
        },

        // シーン・コントローラ
        SceneController: function() {
            console.log("SceneController()を開始します。");
            var self = this;

            // パラメータを読む
            loadParams();

            this.first_name = params.first_name;
            this.last_name = params.last_name;
            this.prev_scene = document.location.href;
            this.point = params.current_point;

            // セリフ・クリックのコールバック
            self.onClickDialogue = function(flag, point_delta, links) {
                console.log("SceneController:onClickDialogue()を開始します。");
                point_delta = parseInt(point_delta);
   
                // 親密度の修正値があれば、その値を加える
                if (point_delta != 0) {
                    params.current_point += point_delta;
                    saveParams();
                }

                // フラグの解析(種類(flags[0])とオプション(flags[1:])に分割
                var flags = flag.split(":")

                // 判定フラグが付いていれば、ハッピーエンド、バッドエン
                // ドの判定なので、親密度を読み判断する
                if (flags[0] == "判定") {
                    // うまく引数に渡せないのでコンテンツに hidden で埋め込み、それをとっていく事にした。
                    var happy = $("input")[0].value;
                    var bad = $("input")[1].value;
                    var threshold = parseInt(flags[1]); // しきい値
                    if (params.current_point >= threshold) {
                        document.location = happy;
                    }
                    else {
                        document.location = bad;
                    }
                }

                // 終了フラグが付いていたら、一つのストーリが完了した状
                // 態なので、親密度をクリアする
                if (flag == "終了") {
                    params.current_point = 0;
                    saveParams();
                }
                console.log("SceneController:onClickDialogue()を終了します。");
            };

            // 保存するをクリックした時のコールバック
            self.onClickSave = function() {
                console.log("SceneController:onClickSave()を開始します。");

                // 「続きから」の実行の為に、表示されたシーンを記憶しておく
                params.current_location = document.location.href;
                params.saved_point = params.current_point;
                saveParams();
                alert("このシーンを保存しました。");

                console.log("SceneController:onClickSave()を終了します。");
            };
            
            console.log("SceneController()を終了します。");
        },

        // ヘルプページのコントローラ
        HelpPageController: function() {
            console.log("HelpPageController()を開始します。");
            // 現在、このコントローラで実装する機能はありません。
            console.log("HelpController()を終了します。");
        },

        // キャラクタ紹介ページのコントローラ
        IntroPageController: function($route, $location) {
            console.log("IntroPageController()を開始します。");

            // パラメータを読む
            loadParams();

            // パラメータからパートナIDを得る
            var partner_id = parseInt($location.search.partner);
            if (!partner_id) {
                partner_id = 0;
            }

            // 描画するためにコンテキストにセット
            this.partners = partners;
            this.partner = partners[partner_id];

            // 次のパートナーへのリンクを作る為に次のパートナIDを計算する
            console.log("DEBUG: partner_id = "+partner_id);
            next_partner_id = partner_id + 1;
            if (next_partner_id >= partners.length) {
                next_partner_id = 0;
            }
            this.next_partner_id = next_partner_id;
            console.log("DEBUG: next_partner_id = "+next_partner_id);

            console.log("IntroController()を終了します。");
        },

        // キャラクタ選択ページのコントローラ
        CharChangePageController: function($route, $location) {
            console.log("CharChangePageController()を開始します。");
            var self = this;

            // パラメータを読む
            loadParams();

            // パラメータからパートナIDを得る
            var partner_id = parseInt($location.search.partner);
            if (!partner_id) {
                partner_id = 0;
            }

            // 描画するためにコンテキストにセット
            this.partners = partners;
            this.partner = partners[partner_id];
            this.partner_id = partner_id;

            // 次のパートナーへのリンクを作る為に次のパートナIDを計算する
            console.log("DEBUG: partner_id = "+partner_id);
            next_partner_id = partner_id + 1;
            if (next_partner_id >= partners.length) {
                next_partner_id = 0;
            }
            this.next_partner_id = next_partner_id;
            console.log("DEBUG: next_partner_id = "+next_partner_id);

            // 選択ボタンのコールバック
            self.onClickSelect = function(partner) {
                console.log("CharChangePageController:onClickSelect()を開始します。");
                document.location = partner.url;

                // キャラを選び直したので、親密度をクリア
                // ボーナス値を考慮して、その値をセット。
                params.current_point = params.bonus;
                params.partner_id = partner_id;
                saveParams();

                console.log("CharChangePageController:onClickSelect()を終了します。");
            };

            console.log("CharChangePageController()を終了します。");
        },

        // リリースノートページのコントローラ
        UpdatePageController: function() {
            console.log("UpdatePageController()を開始します。");
            var self = this;

            // パラメータを読む
            loadParams();

            self.onClickNext = function() {

                // 現在の状態でパラメータを保存する
                saveParams();

                document.location = "index.html";
            }

            console.log("UpdateController()を終了します。");
        },

        // TODO:特別ストーリ、バッドエンドで最初に戻る方法を検討

    };
})();

console.log("アプリケーションの初期化が終了しました。");

/* EOF */
























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































/* -*- mode: javascript; coding: utf-8; -*- */

//////////////////////////////////////////////////////////////////////////////
// PhoneGap 用の設定を記述するセクション
//////////////////////////////////////////////////////////////////////////////

// If you want to prevent dragging, uncomment this section
/*
  function preventBehavior(e) { 
  e.preventDefault(); 
  };
  document.addEventListener("touchmove", preventBehavior, false);
*/
	
/* If you are supporting your own protocol, the var invokeString will contain any arguments to the app launch.
   see http://iphonedevelopertips.com/cocoa/launching-your-own-application-via-a-custom-url-scheme.html
   for more details -jm */
/*
  function handleOpenURL(url) {
  // TODO: do something with the url passed in.
  }
*/

function onBodyLoad() {		
    document.addEventListener("deviceready", onDeviceReady, false);
}
	
/* When this function is called, PhoneGap has been initialized and is ready to roll */
/* If you are supporting your own protocol, the var invokeString will contain any arguments to the app launch.
   see http://iphonedevelopertips.com/cocoa/launching-your-own-application-via-a-custom-url-scheme.html
   for more details -jm */
function onDeviceReady() {
    // do your thing!
    //navigator.notification.alert("PhoneGap is working")
}

//////////////////////////////////////////////////////////////////////////////
// 起動処理
//////////////////////////////////////////////////////////////////////////////
$(document).ready(function(){
    console.log("アプリケーションの初期化を行います。");

    // ページの種類を取得
    kind = $("body").attr("x_kind")
    console.log("DEBUG: body.x_kind=" + kind);

    // メニューの場合
    if (kind == "main") {

        // 最初から始めるボタンの処理
        $("#start_button").bind("click", function(e) {
            console.log("最初から始めるボタンの処理を開始します。");
            storage["current_point"] = 0;
            document.location = "P01/S01/S0011.html";
            console.log("最初から始めるボタンの処理を終了します。");
        });

        // 続きから始めるボタンの処理
        $("#continue_button").bind("click", function(e) {
            console.log("続きから始めるボタンの処理を開始します。");

            // WebStorage が利用できない場合は警告しておく
            if (typeof localStorage === 'undefined') {
                window.alert("本ブラウザでは Web Storage が使えません。"
                             + "この為、続きからの実行はできません。");
                return;
            }

            // WebStorage から最後に表示していた場面を得る
            var storage = localStorage;
            current_scene = storage["current_scene"];
            if (current_scene == null) {
                storage["current_point"] = 0;
                current_scene = "P01/S01/S0011.html";
            } 
            document.location = current_scene;

            console.log("続きから始めるボタンの処理を終了します。");
        });
    }

    // 場面の場合
    else if (kind == "scene") {

        // WebStorage が利用できない場合は警告しておく
        if (typeof localStorage === 'undefined') {
            return;
        }

        // 現在の場面を記憶
        var storage = localStorage;
        storage["current_scene"] = document.location;

        // 選択肢が選択された時の処理
        $(".choice-link").bind("click", function() {
            point = parseInt($(this).attr("point"));
            current_point = parseInt(storage["current_point"])
            console.log("DEBUG: point = "+ point);
            storage["current_point"] = point + current_point;
        });
    }

    // 好感度をチェック
    if (typeof localStorage !== 'undefined') {
        var storage = localStorage;
        if (storage["current_point"] == null) {
            storage["current_point"] = 0;
        }
        console.log("好感度 = " + storage["current_point"]);
    }
    console.log("アプリケーションの初期化が終了しました。");
});

var Jiyuugaoka = (function() {
    // 最初のページのコントローラ
    var TopPageController = function() {
        console.log("TopPageController()を開始します。");
        // 現在、このコントローラで実装する機能はありません。
        console.log("TopPageController()を終了します。");
    }

    // グローバル辞書
    var global = {
        TopPageController: TopPageController,
    };
    return global;
})();

console.log("DEBUG: x ="+Jiyuugaoka);

/* EOF */

